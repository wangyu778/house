<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.love.house.mapper.mysqlMapper.HouseRoomMapper">
  <resultMap id="BaseResultMap" type="com.love.house.entity.HouseRoom">
    <id column="roomId" jdbcType="INTEGER" property="roomId" />
    <result column="roomNumber" jdbcType="INTEGER" property="roomNumber" />
    <result column="roomSize" jdbcType="INTEGER" property="roomSize" />
    <result column="roomImage" jdbcType="VARCHAR" property="roomImage" />
    <result column="roomPrice" jdbcType="INTEGER" property="roomPrice" />
    <result column="roomDirection" jdbcType="INTEGER" property="roomDirection" />
    <result column="roomLocation" jdbcType="INTEGER" property="roomLocation" />
    <result column="roomType" jdbcType="INTEGER" property="roomType" />
    <result column="isLease" jdbcType="INTEGER" property="isLease" />
    <result column="isRepair" jdbcType="INTEGER" property="isRepair" />
    <result column="leaseDate" jdbcType="TIMESTAMP" property="leaseDate" />
    <result column="repairDate" jdbcType="TIMESTAMP" property="repairDate" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    roomId, roomNumber, roomSize ,roomImage, roomPrice, roomDirection, roomLocation, roomType,
    isLease, isRepair, leaseDate, repairDate, `createUser`, createDate, updateUser, updateDate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house_room
    where roomId = #{roomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from house_room
    where roomId = #{roomId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="roomId" keyProperty="roomId" parameterType="com.love.house.entity.HouseRoom" useGeneratedKeys="true">
    insert into house_room (roomNumber, roomImage, roomPrice, 
      roomDirection, roomLocation, roomType, 
      isLease, isRepair, leaseDate, 
      repairDate, `createUser`, createDate, 
      updateUser, updateDate)
    values (#{roomNumber,jdbcType=INTEGER}, #{roomImage,jdbcType=VARCHAR}, #{roomPrice,jdbcType=INTEGER}, 
      #{roomDirection,jdbcType=INTEGER}, #{roomLocation,jdbcType=INTEGER}, #{roomType,jdbcType=INTEGER}, 
      #{isLease,jdbcType=INTEGER}, #{isRepair,jdbcType=INTEGER}, #{leaseDate,jdbcType=TIMESTAMP}, 
      #{repairDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="roomId" keyProperty="roomId" parameterType="com.love.house.entity.HouseRoom" useGeneratedKeys="true">
    insert into house_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomNumber != null">
        roomNumber,
      </if>
      <if test="roomImage != null">
        roomImage,
      </if>
      <if test="roomPrice != null">
        roomPrice,
      </if>
      <if test="roomSize != null">
        roomSize,
      </if>
      <if test="roomDirection != null">
        roomDirection,
      </if>
      <if test="roomLocation != null">
        roomLocation,
      </if>
      <if test="roomType != null">
        roomType,
      </if>
      <if test="isLease != null">
        isLease,
      </if>
      <if test="isRepair != null">
        isRepair,
      </if>
      <if test="leaseDate != null">
        leaseDate,
      </if>
      <if test="repairDate != null">
        repairDate,
      </if>
      <if test="createUser != null">
        `createUser`,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="updateDate != null">
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="roomImage != null">
        #{roomImage,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null">
        #{roomPrice,jdbcType=INTEGER},
      </if>
       <if test="roomSize != null">
        #{roomSize,jdbcType=INTEGER},
      </if>
      <if test="roomDirection != null">
        #{roomDirection,jdbcType=INTEGER},
      </if>
      <if test="roomLocation != null">
        #{roomLocation,jdbcType=INTEGER},
      </if>
      <if test="roomType != null">
        #{roomType,jdbcType=INTEGER},
      </if>
      <if test="isLease != null">
        #{isLease,jdbcType=INTEGER},
      </if>
      <if test="isRepair != null">
        #{isRepair,jdbcType=INTEGER},
      </if>
      <if test="leaseDate != null">
        #{leaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repairDate != null">
        #{repairDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.love.house.entity.HouseRoom">
    update house_room
    <set>
      <if test="roomNumber != null">
        roomNumber = #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="roomImage != null">
        roomImage = #{roomImage,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null">
        roomPrice = #{roomPrice,jdbcType=INTEGER},
      </if>
      <if test="roomDirection != null">
        roomDirection = #{roomDirection,jdbcType=INTEGER},
      </if>
      <if test="roomLocation != null">
        roomLocation = #{roomLocation,jdbcType=INTEGER},
      </if>
      <if test="roomType != null">
        roomType = #{roomType,jdbcType=INTEGER},
      </if>
      <if test="isLease != null">
        isLease = #{isLease,jdbcType=INTEGER},
      </if>
      <if test="isRepair != null">
        isRepair = #{isRepair,jdbcType=INTEGER},
      </if>
      <if test="leaseDate != null">
        leaseDate = #{leaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repairDate != null">
        repairDate = #{repairDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        `createUser` = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        updateDate = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where roomId = #{roomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.love.house.entity.HouseRoom">
    update house_room
    set roomImage = #{roomImage,jdbcType=VARCHAR}
    where roomNumber = #{roomNumber,jdbcType=INTEGER}
  </update>

  <select id="getHouseList" resultType="com.love.house.entity.HouseRoom">
    select <include refid="Base_Column_List"/>
    from house_room
    <where>
      <if test="filterMap.roomDirection != '' and filterMap.roomDirection != null">
        and roomDirection = #{filterMap.roomDirection}
      </if>
      <if test="filterMap.roomNumber != '' and filterMap.roomNumber != null">
        and roomNumber = #{filterMap.roomNumber}
      </if>
      <if test="filterMap.roomLocation != '' and filterMap.roomLocation != null">
        and roomLocation = #{filterMap.roomLocation}
      </if>
      <if test="filterMap.roomType != '' and filterMap.roomType != null">
        and roomType = #{filterMap.roomType}
      </if>
      <if test="filterMap.beginPrice != '' and filterMap.beginPrice != null">
        and roomPrice &gt;= #{filterMap.beginPrice}
      </if>
      <if test="filterMap.endPrice != '' and filterMap.endPrice != null">
        and roomPrice &lt;= #{filterMap.endPrice}
      </if>
    </where>
  </select>
  <select id="selectByUserId" resultType="com.love.house.entity.HouseRoom">
    select <include refid="Base_Column_List" />
    from house_room
    where roomId = (
        select  roomId
        from house_room_user
        where userId = #{userId}
    )
  </select>
    <select id="getUser" resultType="com.love.house.entity.User">
      select *
      from user
      where userId = (
        select userId
        from house_room_user
        where roomId = #{roomId}
      )
    </select>
</mapper>