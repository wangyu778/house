<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.love.house.mapper.UserMapping">
  <resultMap id="BaseResultMap" type="com.love.house.entity.User">
    <id column="user_userId" jdbcType="TINYINT" property="userId" />
    <result column="user_userName" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="passWord" />
  </resultMap>

  <resultMap id="PermissionResultMap" type="com.love.house.entity.SecuritySysPermission">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="url" property="url" jdbcType="VARCHAR"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <collection property="roles" ofType="com.love.house.entity.Role">
      <id column="id" property="id"/>
      <result column="roleName" property="roleName"/>
      <result column="roleType" property="roleType"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    user.id as user_id, user.userName as user_userName, user.`password` as `user_password`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user user
    where user.id = #{id,jdbcType=TINYINT}
  </select>
  <select id="loadUserByUsername" resultType="com.love.house.entity.User">
    select *
    from user user
    where user.userId = #{userId}
  </select>

  <select id="getUserRoleList" resultType="com.love.house.entity.User">
    SELECT *
    FROM user u LEFT JOIN user_role ur on u.userId = ur.userId LEFT JOIN menu_role mr on ur.roleId = mr.roleId LEFT JOIN menu m ON mr.menuId = m.id
    <where>
      <if test="filterMap.userId != null and filterMap.userId != ''">
        and u.userId = #{filterMap.userId}
      </if>
      <if test="filterMap.url != null and filterMap.url != ''">
        and m.url = #{filterMap.url}
      </if>
      <if test="filterMap.enabled != null and filterMap.enabled != ''">
        and m.enabled = #{filterMap.enabled}
      </if>
    </where>
  </select>

  <select id="getPermissionList" resultMap="PermissionResultMap">
    select  m.*,r.*
    from menu m
    left join menu_role mr on m.id=mr.menuId
    left join role r on mr.roleId=r.id
    <where>
      <if test="filterMap.enabled != null and filterMap.enabled != ''">
        and m.enabled = #{filterMap.enabled}
      </if>
      <if test="filterMap.roleName != null and filterMap.roleName != ''">
        and m.roleName = #{filterMap.roleName}
      </if>
       <if test="filterMap.url != null and filterMap.url != ''">
        and m.url = #{filterMap.url}
      </if>
    </where>
    order by m.id desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from user
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.love.house.entity.User" useGeneratedKeys="true">
    insert into user (userName, `password`)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.love.house.entity.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        `password`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.love.house.entity.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.love.house.entity.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>